package com.colony.buildings;

import java.util.ArrayList;
import java.util.List;

import com.badlogic.gdx.scenes.scene2d.Stage;
import com.colony.BaseActor;
import com.colony.commons.Utils;
import com.colony.enums.TipoEdificio;

public class BuildingsHub {
	private static List<Edificio> edifici = new ArrayList<>();

	public static Pozzo createPozzo(float x, float y, Stage stage, BaseActor act) {
		Pozzo p = new Pozzo(x, y, stage, act);
		edifici.add(p);
		return p;

	}
	public static EdificioSuArea createEdificioSuArea(float x, float y, Stage stage, BaseActor act) {
		EdificioSuArea p = new EdificioSuArea(x, y, stage, act);
		edifici.add(p);
		return p;

	}
	public static EdificioFabbrica createCastello(float x, float y, Stage s, BaseActor act) {
		Castello p = new Castello(x, y, s, act);
		edifici.add(p);
		return p;

	}
	public static EdificioFabbrica createBoscaiolo(float x, float y, Stage s, BaseActor act) {
		Boscaiolo p = new Boscaiolo(x, y, s, act);
		edifici.add(p);
		return p;
	}

	public static List<EdificioFabbrica> getEdificiType(TipoEdificio t) {
		List<EdificioFabbrica> out = new ArrayList<>();
		for (Edificio ed : edifici)
			if (ed.getTipoEdificio() == t)
				out.add(ed);
		return out;
	}

	public static EdificioFabbrica getNearestEdificio(TipoEdificio t, float x, float y) {
		List<EdificioFabbrica> out = getEdificiType(t);
		if (out.size() == 0)
			return null;

		EdificioFabbrica near = out.get(0);
		float minDist = Utils.calcDist(x, y, near.getX(), near.getY());
		for (EdificioFabbrica ed : out) {
			float d = Utils.calcDist(x, y, ed.getX(), ed.getY());
			if (d < minDist) {
				minDist = d;
				near = ed;
			}
		}
		return near;

	}

	public static EdificioFabbrica getEdificioById(int id) {
		for (EdificioFabbrica ed : edifici)
			if (ed.getId() == id)
				return ed;
		return null;
	}


	
}
