package com.colony.buildings.actors.infopanels;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Event;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.InputEvent.Type;
import com.badlogic.gdx.scenes.scene2d.ui.Button;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle;
import com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable;
import com.colony.buildings.drag.SegheriaDrag;

public class InfoPanelScreen implements Screen, InputProcessor{
	
	
	private Stage mainStage;
	protected Stage uiStage;
	protected Table uiTable;


	public InfoPanelScreen(Stage mainStage) {
		this.mainStage = mainStage;
		
		uiStage = new Stage();
		uiTable = new Table();
		uiTable.setFillParent(true);
		uiStage.addActor(uiTable);

		mainStage.addActor(uiTable);
		
		uiTable.add().top();
		Button ok = createButton("street.png");
		ok.addListener((Event e) -> {

			uiTable.remove();
			
			return false;
		});
		uiTable.add().bottom();
		uiTable.add(ok);
	}
	@Override
	public void render(float dt) {
	
		
		uiStage.act(dt);
		mainStage.act(dt);

		mainStage.draw();
		uiStage.draw();
	}
	
	private Button createButton(String img) {
		ButtonStyle buttonStyle = new ButtonStyle();
		Texture buttonTex = new Texture(Gdx.files.internal(img));
		TextureRegion buttonRegion = new TextureRegion(buttonTex);
		buttonStyle.up = new TextureRegionDrawable(buttonRegion);
		Button b = new Button(buttonStyle);
		b.setColor(Color.CYAN);
		return b;
	}
	
	@Override
	public boolean keyDown(int keycode) {
	
		return false;
	}

	@Override
	public boolean keyUp(int keycode) {
	
		return false;
	}

	@Override
	public boolean keyTyped(char character) {
	
		return false;
	}

	@Override
	public boolean touchDown(int screenX, int screenY, int pointer, int button) {
		
		return false;
	}

	@Override
	public boolean touchUp(int screenX, int screenY, int pointer, int button) {
		
		return false;
	}

	@Override
	public boolean touchDragged(int screenX, int screenY, int pointer) {
		
		return false;
	}

	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		
		return false;
	}

	@Override
	public boolean scrolled(int amount) {
		
		return false;
	}

	@Override
	public void show() {
	}

	

	@Override
	public void resize(int width, int height) {
	
		
	}

	@Override
	public void pause() {
	
		
	}

	@Override
	public void resume() {
	
		
	}

	@Override
	public void hide() {
	
		
	}

	@Override
	public void dispose() {
	
		
	}

}
