package com.colony.buildings;

import java.util.Date;

import com.badlogic.gdx.scenes.scene2d.Stage;
import com.colony.BaseActor;
import com.colony.buildings.actors.Agent;
import com.colony.buildings.actors.Mission;
import com.colony.buildings.actors.PozzoActor;
import com.colony.commons.Anagrafica;
import com.colony.commons.NotifyFromAgent;
import com.colony.fixed.Albero;

public class Coltivatore extends EdificioFabbrica implements NotifyFromAgent{
	private int timeToWork = 15;
	private long lastTimeWorked = 0;
	private boolean missionComplete = true;
	protected float sizeArea = 300;

	public Coltivatore(float x, float y, Stage s, BaseActor act,String name) {
		super(x, y, s, act, name);

	}

	public void notifyMissionComplete() {
		missionComplete = true;
		lastTimeWorked = (new Date()).getTime();
	}

	@Override
	public void work() {
		if (!missionComplete)
			return;

		Date d = new Date();

		if (d.getTime() - lastTimeWorked < timeToWork * 1000)
			return;

		Agent a = new Agent(getX(), getY(), mainStage, this);

		float posX = (float) (x + 2 * sizeArea * (Math.random() - 0.5));
		float posY = (float) (y + 2 * sizeArea * (Math.random() - 0.5));
		missionComplete = false;
		a.goMission(posX, posY, new Mission() {

			@Override
			public void exec() {
				Anagrafica.createAlbero(posX, posY, mainStage);

			}
		});

	}

}
