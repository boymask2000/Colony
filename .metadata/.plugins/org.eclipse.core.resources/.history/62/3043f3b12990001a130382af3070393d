package com.colony;

import java.util.Date;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.InputMultiplexer;
import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.utils.viewport.Viewport;
import com.colony.buildings.Edificio;
import com.colony.utils.AnimationSet;

public abstract class Visible extends BaseActor {
	protected Edificio edificio;

	
	private String animationFiles[] = { "b2.png" };
	private AnimationSet animationSet = new AnimationSet(animationFiles);
	private Stage mainStage;

	public Visible(float x, float y, Stage s) {
		super(x, y, s);
		mainStage = s;

	

		loadAnim();
	}

	private long lastTime = 0;

	public void refreshEdificio() {
	
		Date d = new Date();
		long diff = d.getTime() - lastTime ;
	
		if (diff < 2 * 1000)
			return;
		lastTime = d.getTime();
	
		edificio.work();
	}

	public void loadAnim() {
		loadAnimationFromFiles(animationSet.getAnimationFiles(), 0.1f, true);

	}

	public Visible(float x, float y) {
		super(x, y);

//		init();
		loadAnim();

	}




	public String[] getAnimationFiles() {
		return animationFiles;
	}

	public void setAnimationFiles(String[] animationFiles) {
		// loadAnimationFromFiles(animationFiles, 0.1f, true);
		this.animationFiles = animationFiles;

	}

//	@Override
//	public void act(float dt) {
//		if (!moving)
//			return;
//		super.act(dt);
//		float x = Gdx.input.getX();
//		float y = Gdx.input.getY();
//
//		Viewport v = mainStage.getViewport();
//		Vector2 mousePos = v.unproject(new Vector2(x, y));
//		setPosition(mousePos.x, mousePos.y);
//
//	}

	
	
}
